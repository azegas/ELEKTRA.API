// <auto-generated />
using ELEKTRA.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ELEKTRA.DataAccess.Migrations
{
    [DbContext(typeof(ElektraContext))]
    [Migration("20250227055415_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ELEKTRA.DataAccess.Models.Calculation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("DailyCost")
                        .HasColumnType("float");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<double>("ElectricityCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Calculations");
                });

            modelBuilder.Entity("ELEKTRA.DataAccess.Models.Device", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Watt")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("ELEKTRA.DataAccess.Models.Calculation", b =>
                {
                    b.HasOne("ELEKTRA.DataAccess.Models.Device", "Device")
                        .WithOne("Calculation")
                        .HasForeignKey("ELEKTRA.DataAccess.Models.Calculation", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("ELEKTRA.DataAccess.Models.Device", b =>
                {
                    b.Navigation("Calculation");
                });
#pragma warning restore 612, 618
        }
    }
}
